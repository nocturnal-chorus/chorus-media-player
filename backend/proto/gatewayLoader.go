// Code generated by generate-gateway-loader. DO NOT EDIT

package proto

import (
	"context"

	"github.com/nocturnal-chorus/chorus-media-player/proto/music"

	"github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	"google.golang.org/grpc"
	"google.golang.org/grpc/credentials/insecure"
	"net/http"
)

func NewGateway(ctx context.Context) (http.Handler, error) {
	var (
		err error
		mux = runtime.NewServeMux()
	)

	musicOpts := []grpc.DialOption{grpc.WithTransportCredentials(insecure.NewCredentials())}
	err = music.RegisterMusicServiceHandlerFromEndpoint(ctx, mux, genEndpointByService("musicService"), musicOpts)
	if err != nil {
		return nil, err
	}

	return mux, err
}

func genEndpointByService(serviceName string) string {
	//return fmt.Sprintf("%s:8091", strings.ToLower(strings.Replace(serviceName, "Service", "", -1)))
	return "127.0.0.1:8091"
}
